import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns

# Example values for three lines, the last one without CI
cut_lengths = range(1, 16)

pwn = np.array([0.717636183486811,0.717939078228364,0.713250067057614,0.721334839022179,0.720388673365863,0.73484068182328,0.72063206507716,0.725031959406968,0.643903573641945,0.614187238657025,0.684582289925543,0.611577370789964,0.50266919700127,0.357909229169019,0.354341722529959])
pwn_min = np.array([0.687046453721874,0.687154626798797,0.683352759670635,0.687802052254152,0.687832346234298,0.692278278740327,0.553261127506474,0.558669089365503,0.440339364254298,0.356213294639889,0.393547590783118,0.423081213074137,0.223857166398879,0.1924633005883,0.192608522395196])
pwn_max = np.array([0.760240542763157,0.760446451163967,0.755142101641738,0.76556136207855,0.763018437406037,0.784069793136277,0.803097034998462,0.80266039703197,0.744330591784023,0.716481391340977,0.796254910328194,0.747658649014186,0.71277575926016,0.507997107039537,0.51635712658269])

pwn_no_inter = np.array([0.710652760933424,0.710907745834641,0.706382406760839,0.713469718512848,0.711172427026843,0.723264288904769,0.676541622824329,0.67839329748586,0.582379359514231,0.532554595293075,0.604194392272304,0.519223505506298,0.451916442903199,0.316475435847269,0.312063934714746])

lstm = np.array([0.688820768630701,0.688953374112824,0.686295602083583,0.694623898958095,0.69700223647309,0.714360840004963,0.678645296808532,0.678645277710535,0.597128810482619,0.552348919438468,0.60066453336915,0.536136299031117,0.477283299060344,0.342982672776332,0.347467419687509])
lr = np.array([0.668318311809804,0.668692109473572,0.662446265765523,0.674392140629543,0.673923052224476,0.681966471126621,0.643850749170374,0.651504099066337,0.576507629036644,0.527899776827626,0.568100012057895,0.511236940576832,0.436806182794319,0.332159971271466,0.3232025519855])
dt = np.array([0.622594535420882,0.622644171750699,0.619752012467362,0.629043473119645,0.624525013208512,0.634239899328365,0.626325991452253,0.620355262045456,0.533894747985806,0.504410469318347,0.583781900396594,0.512023773531564,0.44697125286281,0.297205855497997,0.297607299674215])
knn = np.array([0.652850388368153,0.652961510949796,0.65184642734223,0.653771748329355,0.652738854338398,0.65628830205059,0.583986830938765,0.584636784917366,0.54286802165909,0.505530349025954,0.565000986574043,0.475008625216165,0.407876444793793,0.247439485914718,0.246374367541467])
nb = np.array([0.641361049066331,0.641878622435701,0.637515012348389,0.640490567291506,0.639244111347612,0.650221186933527,0.651924858320481,0.655629356253314,0.563748492571366,0.50714310366707,0.570961714424272,0.488870145754586,0.424228246271064,0.341612613590858,0.335144023740611])

def plot_line_plots(cut_lengths, means_auc, mins_auc, maxes_auc, labels):
    palet = sns.color_palette() # "Set2"
    matplotlib.rcParams.update({'font.size': 20})

    fig = plt.figure(figsize=(16, 8))
    ax = plt.gca()

    def plot_on_axes(ax, m, a, b, title):
        for i, (mean, a, b, l) in enumerate(zip(means_auc, mins_auc, maxes_auc, labels)):
            ax.plot(cut_lengths, mean, color=palet[i], label=l, linewidth=2.0, linestyle='--', marker='o')
            if len(a) > 0 and len(b) > 0:
                ax.fill_between(cut_lengths, a, b, alpha=.1, color=palet[i])

        ax.set_xlabel('Size of patient pathway prefix')
        ax.set_xticks(np.arange(1, 16, step=1))
        ax.set_ylabel(r'$AUC_{ROC}$')
        ax.set_ylim(0.2, 0.85)
        ax.title.set_text(title)

    plot_on_axes(ax, means_auc, mins_auc, maxes_auc, title='Prediction Performance Over Time')

    ax.legend(ncol=2, loc='lower left',
               columnspacing=1.3, labelspacing=0.0,
               handletextpad=0.0, handlelength=1.5,
               fancybox=False, shadow=False)

    y_axis = ax.axes.get_yaxis()

    plt.tight_layout()
    plt.savefig(r"..\plots\prediction" + "\\" + "pred_perf_over_time.png")
    plt.show()


plot_line_plots(cut_lengths,
                means_auc=[pwn, pwn_no_inter, lstm, lr, dt, knn, nb],
                mins_auc=[pwn_min, [], [], [], [], [], []],
                maxes_auc=[pwn_max, [], [], [], [], [], []],
                labels=['PatWay-Net (with interaction)',
                        'PatWay-Net (without interaction)',
                        'LSTM network (with static module)',
                        'Logistic regression',
                        'Decision tree',
                        r'$K$-nearest neighbor',
                        r'Na√Øve Bayes'])